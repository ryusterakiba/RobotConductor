; Auto-generated. Do not edit!


(cl:in-package motion-msg)


;//! \htmlinclude music_commands.msg.html

(cl:defclass <music_commands> (roslisp-msg-protocol:ros-message)
  ((tempo
    :reader tempo
    :initarg :tempo
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (right_arm_motions
    :reader right_arm_motions
    :initarg :right_arm_motions
    :type (cl:vector cl:string)
   :initform (cl:make-array 0 :element-type 'cl:string :initial-element ""))
   (left_arm_motions
    :reader left_arm_motions
    :initarg :left_arm_motions
    :type (cl:vector cl:string)
   :initform (cl:make-array 0 :element-type 'cl:string :initial-element "")))
)

(cl:defclass music_commands (<music_commands>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <music_commands>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'music_commands)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name motion-msg:<music_commands> is deprecated: use motion-msg:music_commands instead.")))

(cl:ensure-generic-function 'tempo-val :lambda-list '(m))
(cl:defmethod tempo-val ((m <music_commands>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader motion-msg:tempo-val is deprecated.  Use motion-msg:tempo instead.")
  (tempo m))

(cl:ensure-generic-function 'right_arm_motions-val :lambda-list '(m))
(cl:defmethod right_arm_motions-val ((m <music_commands>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader motion-msg:right_arm_motions-val is deprecated.  Use motion-msg:right_arm_motions instead.")
  (right_arm_motions m))

(cl:ensure-generic-function 'left_arm_motions-val :lambda-list '(m))
(cl:defmethod left_arm_motions-val ((m <music_commands>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader motion-msg:left_arm_motions-val is deprecated.  Use motion-msg:left_arm_motions instead.")
  (left_arm_motions m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <music_commands>) ostream)
  "Serializes a message object of type '<music_commands>"
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'tempo))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'tempo))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'right_arm_motions))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((__ros_str_len (cl:length ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) ele))
   (cl:slot-value msg 'right_arm_motions))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'left_arm_motions))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((__ros_str_len (cl:length ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) ele))
   (cl:slot-value msg 'left_arm_motions))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <music_commands>) istream)
  "Deserializes a message object of type '<music_commands>"
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'tempo) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'tempo)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'right_arm_motions) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'right_arm_motions)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:aref vals i) __ros_str_idx) (cl:code-char (cl:read-byte istream))))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'left_arm_motions) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'left_arm_motions)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:aref vals i) __ros_str_idx) (cl:code-char (cl:read-byte istream))))))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<music_commands>)))
  "Returns string type for a message object of type '<music_commands>"
  "motion/music_commands")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'music_commands)))
  "Returns string type for a message object of type 'music_commands"
  "motion/music_commands")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<music_commands>)))
  "Returns md5sum for a message object of type '<music_commands>"
  "ed9308da9714234f1e05e7985bf4f8c3")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'music_commands)))
  "Returns md5sum for a message object of type 'music_commands"
  "ed9308da9714234f1e05e7985bf4f8c3")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<music_commands>)))
  "Returns full string definition for message of type '<music_commands>"
  (cl:format cl:nil "float64[] tempo~%string[] right_arm_motions~%string[] left_arm_motions~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'music_commands)))
  "Returns full string definition for message of type 'music_commands"
  (cl:format cl:nil "float64[] tempo~%string[] right_arm_motions~%string[] left_arm_motions~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <music_commands>))
  (cl:+ 0
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'tempo) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'right_arm_motions) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4 (cl:length ele))))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'left_arm_motions) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4 (cl:length ele))))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <music_commands>))
  "Converts a ROS message object to a list"
  (cl:list 'music_commands
    (cl:cons ':tempo (tempo msg))
    (cl:cons ':right_arm_motions (right_arm_motions msg))
    (cl:cons ':left_arm_motions (left_arm_motions msg))
))
